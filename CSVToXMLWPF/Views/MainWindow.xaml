<Window x:Class="CSVToXMLWPF.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/" 
        xmlns:local="clr-namespace:CSVToXMLWPF.ViewModels"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Title="{Binding Title}" Height="500" Width="1000" 
        WindowStartupLocation="CenterScreen"
        Closing="Window_Closing">
    <!--local은 IndexConverter 클래스가 정의된 네임스페이스, XAML 파일에서 해당 클래스에 접근할 수 있게 해줌-->
    <!--x:Key**는 이 변환기에 대한 고유한 키를 설정, 나중에 이 키를 사용하여 변환기를 참조 가능-->
    <Window.Resources>
        <local:IndexConverter x:Key="IndexConverter"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="6*"/>
            <RowDefinition Height="0.8*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="0, 10, 0, 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="1">
                <Button Margin="7,0,20,0"
                        Content="Set SaveOptions"
                        IsEnabled="{Binding OpenFileChecked}"
                        Height="30" 
                        />
            </Grid>
        </Grid>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Read TabControl -->
            <Grid Grid.Column="0">
                <TabControl Margin="10, 10, 7, 0" ItemsSource="{Binding ReadTabItems}" IsSynchronizedWithCurrentItem="True" SelectedIndex="{Binding SelectedReadTabIndex}">
                    <!-- TabItem Header에 파일명을 표시 -->
                    <TabControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding FileName}" />
                        </DataTemplate>
                    </TabControl.ItemTemplate>

                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            <DataGrid ItemsSource="{Binding CsvView}" AutoGenerateColumns="False" Grid.Row="1" Margin="20, 10, 10, 10" CanUserAddRows="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="No" Width="SizeToHeader" Binding="{Binding No}"/>
                                    <DataGridTextColumn Binding="{Binding Label}" Header="Label" Width="Auto" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Address" Width="SizeToHeader" IsReadOnly="True">
                                        <DataGridTextColumn.Binding>
                                            <MultiBinding Converter="{StaticResource IndexConverter}">
                                                <!--현재 데이터 그리드 행-->
                                                <Binding />
                                                <!--전체 CsvView-->
                                                <Binding Path="DataContext.CsvView" RelativeSource="{RelativeSource AncestorType={x:Type DataGrid}}"/>
                                            </MultiBinding>
                                        </DataGridTextColumn.Binding>
                                    </DataGridTextColumn>
                                    <!--Mode=TwoWay 추가하여 사용자가 수정할 수 있는 항목에 대해 양방향 바인딩 활성화-->
                                    <DataGridTextColumn Binding="{Binding Name, Mode=TwoWay}" Header="IOName" Width="SizeToCells" IsReadOnly="False"/>
                                    <DataGridTextColumn Binding="{Binding DataType, Mode=TwoWay}" Header="DataType" Width="1*" IsReadOnly="False"/>
                                    <DataGridTextColumn Binding="{Binding Multi, Mode=TwoWay}" Header="Multi" Width="1*" IsReadOnly="False"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>
            </Grid>

            <!-- Write TabControl -->
            <Grid Grid.Column="1">
                <TabControl Margin="7, 10, 10, 0" ItemsSource="{Binding WriteTabItems}" IsSynchronizedWithCurrentItem="True" SelectedIndex="{Binding SelectedWriteTabIndex}">
                    <TabControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding FileName}"/>
                            <!--TabItem 헤더에 파일명 표시-->
                        </DataTemplate>
                    </TabControl.ItemTemplate>

                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            <DataGrid ItemsSource="{Binding CsvView}" AutoGenerateColumns="False" Grid.Row="1" Margin="20, 10, 10, 10" CanUserAddRows="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="No" Width="SizeToHeader" Binding="{Binding No}"/>
                                    <DataGridTextColumn Binding="{Binding Label}" Header="Label" Width="Auto" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Address" Width="SizeToHeader" IsReadOnly="True">
                                        <DataGridTextColumn.Binding>
                                            <MultiBinding Converter="{StaticResource IndexConverter}">
                                                <!--현재 데이터 그리드 행-->
                                                <Binding />
                                                <!--전체 CsvView-->
                                                <Binding Path="DataContext.CsvView" RelativeSource="{RelativeSource AncestorType={x:Type DataGrid}}"/>
                                            </MultiBinding>
                                        </DataGridTextColumn.Binding>
                                    </DataGridTextColumn>
                                    <!--Mode=TwoWay 추가하여 사용자가 수정할 수 있는 항목에 대해 양방향 바인딩 활성화-->
                                    <DataGridTextColumn Binding="{Binding Name, Mode=TwoWay}" Header="IOName" Width="SizeToCells" IsReadOnly="False"/>
                                    <DataGridTextColumn Binding="{Binding DataType, Mode=TwoWay}" Header="DataType" Width="1*" IsReadOnly="False"/>
                                    <DataGridTextColumn Binding="{Binding Multi, Mode=TwoWay}" Header="Multi" Width="1*" IsReadOnly="False"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>
            </Grid>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="1">
                <WrapPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Button Content="Open File" Margin="15,0,10,0" Height="40" Width="120" Command="{Binding OpenFileCommand}" FontFamily="Malgun Gothic" FontSize="15" Background="AliceBlue"/>
                    
                    <Button Margin="10,0,10,0" Content="Set SaveOptions" Width="180" IsEnabled="{Binding OpenFileChecked}" Command="{Binding SetSaveOptionsCommand}" FontFamily="Malgun Gothic" FontSize="15" Background="AliceBlue"/>
                </WrapPanel>
            </Grid>
        </Grid>
        <!--<ContentControl prism:RegionManager.RegionName="ContentRegion"/>-->
    </Grid>
</Window>
