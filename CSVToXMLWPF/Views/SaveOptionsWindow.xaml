<Window x:Class="CSVToXMLWPF.Views.SaveOptionsWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"      
             xmlns:local="clr-namespace:CSVToXMLWPF.ViewModels"
             Title="{Binding Title}" Height="500" Width="1000"
             Background="White"
             >
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="4*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>

        <!--Root 입력란-->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="1*"/>
                <!--<ColumnDefinition Width="Auto"/>-->
                <!--어디에 Save XML 버튼을 만들지 아직 못 정해서 일단 주석-->
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Label Content="Root)" Height="45"  FontSize="20" VerticalContentAlignment="Center"
                       Margin="10, 0, 0, 0"/>
            </Grid>

            <Grid Grid.Column="1">
                <!--TextBox-->
                <TextBox Height="45" Margin="10,0,10,0" FontSize="20" 
                         IsEnabled="{Binding OpenFileChecked}"
                         VerticalContentAlignment="Center"
                         x:Name="WaterMarkTextBox"
                         Text="{Binding RootName}"/>

                <!--Watermark TextBlock-->
                <!--IsHitTestVisible="False" : extBlock이 마우스나 키보드의 입력을 받지 않도록 설정, 사용자가 워터마크 텍스트를 클릭해도 TextBox에만 포커스-->
                <TextBlock IsHitTestVisible="False" 
                           Text="(ex: PLCAddress)"  
                           VerticalAlignment="Center" 
                           Margin="15,0,10,0"
                           FontSize="20"
                           Foreground="DarkGray">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <!--TextBlock 기본 상태는 숨김-->
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <!--TextBox의 Text가 비어 있으면 TextBlock 표시-->
                                <!--DataTrigger: 특정 조건이 충족될 때 스타일을 변경, 텍스트박스의 Text 속성에 바인딩하여 WaterMarkTextBox의 텍스트 변화를 감지-->
                                <!--텍스트가 비어있으면(Value="") Visibility 속성을(Property="Visibility") Visible로 설정(Value="Visible")하여 TextBlock이 보이게 함-->
                                <DataTrigger Binding="{Binding Text, ElementName=WaterMarkTextBox}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </Grid>

        <!--Group Name 선택란-->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <StackPanel Margin="10, 0, 5, 0">
                        <Label Content="Selected Tabs" VerticalContentAlignment="Bottom" Margin="0,0,0,5"/>
                        <WrapPanel>
                            <ComboBox x:Name="SelectedTabs" ItemsSource="{Binding FileList}" SelectedItem="{Binding SelectedAddFile}" SelectedIndex="{Binding SelectedFileIndex}" Width="350" Height="50"/>
                            <!--SelectedFileName이 바인딩 안 됨-->
                            <!--<ComboBox x:Name="SelectedTabs" ItemsSource="{Binding FileList}" SelectedItem="{Binding SelectedAddFile}" SelectedIndex="{Binding SelectedFileIndex}" MinWidth="330" Height="50">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding SelectedFileName}" FontSize="15"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>-->
                            <Button Command="{Binding AddFileCommand}" Content="Add File" FontSize="15" Width="110" Margin="15, 0, 0, 0"/>
                        </WrapPanel>
                    </StackPanel>
                </Grid>
                <Grid Grid.Row="1">
                    <StackPanel Margin="10, 0, 5, 0">
                        <Label Content="Group Name"/>
                        <ComboBox MinWidth="350" Height="50" ItemsSource="{Binding GroupName}"/>
                    </StackPanel>
                </Grid>
            </Grid>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                
                <Grid Grid.Row="0">
                    <StackPanel Margin="5, 0 ,10, 0">
                        <Label Content="Save Tabs" VerticalContentAlignment="Bottom" Margin="0,0,0,5"/>
                        <WrapPanel>
                            <ComboBox x:Name="SaveTabs" ItemsSource="{Binding SaveTabFiles}" SelectedItem="{Binding SelectedRemoveFile}" SelectedIndex="{Binding SelectedSaveFileIndex}" MinWidth="330" Height="50"/>
                            <!--<ComboBox x:Name="SaveTabs" ItemsSource="{Binding SaveTabFiles}" SelectedItem="{Binding SelectedRemoveFile}" SelectedIndex="{Binding SelectedSaveFileIndex}" MinWidth="350" Height="50">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}" FontSize="15"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>-->
                            <Button Command="{Binding RemoveFileCommand}" Content="Remove File" FontSize="15" Width="110" Margin="15, 0, 0, 0"/>
                        </WrapPanel>
                    </StackPanel>
                </Grid>

                <Grid Grid.Row="1">
                    <Button Content="Save Options" HorizontalAlignment="Left" Width="110" Height="50" Command="{Binding SaveOptionsCommand}"/>
                </Grid>
            </Grid>
        </Grid>

        <!--일단 여기에 저장버튼 만들게 아무래도 젤 밑에 있는게 쓰기 편할 것 같아서-->
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="1">
                <Button Content="Save XML" Margin="10, 0, 10, 0" Command="{Binding SaveXMLCommand}"
                        FontSize="15" Width="120" Height="50"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
